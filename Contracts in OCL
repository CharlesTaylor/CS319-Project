context Player inv:
	items->size <= MAX_NUM_ITEMS

context Player::take(item) pre:
	not item = NULL

context Player::take(item) pre:
	player.inventory.size() < MAX_NUM_ITEMS

context Player::take(item) post:
	player.inventory.contains(item)

context Player::take(item) post:
	not player.getCurrent().things.contains(item)

context Map::enlarge() post:
	size = SIZEMULT * @pre.size

context Location :: setXY(x,y) post:
	self.x = x
	self.y = y

context Location :: getAdjacent(d) pre:
	d->passable = true
	
context Location :: getAdjacent(d) post:
	x = @pre.x + 1
	y = @pre.y + 1
	
context Item inv:
	getDamage() >= 0
	
context Item inv:
	getFoodValue() >= 0
	
context Character :: attack(c, i) pre:
	c-> hitPoint >= c->strength * i->damage

context Character :: attack(c,i) post:
	c-> hitPoint = @pre.(c->hitPoint - c->strength*i->damage)

context Character :: setStrength(s) pre:
	s >= 0
	
	


	
	

